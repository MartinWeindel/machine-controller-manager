syntax = "proto3";

package infra;

// The Infragrpc service definition.
service Infragrpc {
  // infra operations
  rpc Register(stream DriverSide) returns (stream MCMside) {}

  // Share Metadata
  // Split this into two RPCs GetMachineClass and GetCloudConfig
  rpc ShareMeta(Metadata) returns (ErrorResp) {}
}

// The message containing driver side structures
message DriverSide {

    // operationID to match response with asynchronous requests
    int32 operationID = 1;

    // operationType can be register, create, delete, getVMs
    string operationType = 2;

    message registerationResp {
        string name = 1;
        string group = 2;
        string kind = 3;
        string version = 4;
    }

    message createResp {
        string providerID = 1;
        string nodename = 2;
        int32 error = 3;
    }

    message deleteResp {
        int32 error = 1;
    }

    message listResp {
        repeated string list = 1;
        int32 error = 2;
    }

    oneof response {
        registerationResp registerResp = 3;
        createResp createresponse = 4;
        deleteResp deleteresponse = 5;
        listResp listresponse = 6;
    }
}

// The message containing the MCM side structures
message MCMside {

    // operationID to match response with asynchronous requests
    int32 operationID = 1;
    
    // operationType can be register, create, delete, getVMs
    string operationType = 2;

    message machineClassMeta {
        string name = 1;
        int32 revision = 2;
    }

    message operationParams {
        machineClassMeta machineClassMetaData = 1;
        // cloudConfig has the secrets (username/password info to connect to provider account)
        string cloudConfig = 2;
        string userData = 3;
        string machineID = 4;
        string machineName = 5;
    }

    operationParams operationparams = 3;
}

// The request message containing metadata information
message Metadata {
  string type = 1;
  string name = 2;
  string data = 3;
}

// The response message containing error code and message
message ErrorResp {
  int32 err = 1;
  string message = 2;
}